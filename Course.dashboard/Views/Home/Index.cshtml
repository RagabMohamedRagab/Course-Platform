@model DisplayDataInHomeViewModel;
@{
    ViewData["Title"] = "Home";
}
<div class="analytics-sparkle-area">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
                <div class="analytics-sparkle-line reso-mg-b-30">
                    <div class="analytics-content">
                        <h5>Total Books</h5>
               
                        <span class="text-success">@Model.Books %</span>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
                <div class="analytics-sparkle-line reso-mg-b-30">
                    <div class="analytics-content">
                        <h5>Total Courses</h5>
                     
                        <span class="text-danger">@Model.Courses%</span>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
                <div class="analytics-sparkle-line reso-mg-b-30 table-mg-t-pro dk-res-t-pro-30">
                    <div class="analytics-content">
                        <h5>Total Subscribes</h5>
                  
                        <span class="text-info">@Model.TotalSubscribes%</span>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
                <div class="analytics-sparkle-line table-mg-t-pro dk-res-t-pro-30">
                    <div class="analytics-content">
                        <h5>Total Earning</h5>
                     
                        <span class="text-inverse">@Model.TotalEarning%</span>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="row" style="margin-top: 6%;
">
                <div class="col-md-6 col-sm-6 col-xs-12 mt-5">
                    <canvas id="bar"></canvas>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12 mt-5">
                    <canvas id="line"></canvas>
                </div>

          @*      <div class="col-md-6 col-sm-6 col-xs-12 mt-5">
                    <canvas id="Bubble "></canvas>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12 mt-5">
                    <canvas id="doughnut"></canvas>
                </div>*@
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <script src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        //google.charts.load('current', { packages: ['corechart'] });
        //google.charts.setOnLoadCallback(drawChart);
        //function drawChart(){
        
        //    var data = new google.visualization.DataTable();
        //    data.addColumn('string', @Html.Raw(Json.Serialize(Model.Months)));
        //    data.addRows([@Html.Raw(Json.Serialize(Model.Counts))]);
        //    var options = {
        //        'title': 'How Much Pizza I Ate Last Night',
        //        'width': 400,
        //        'height': 300
        //    };
        //    var chart = new google.visualization.PieChart(document.getElementById('doughnut'));
        //    chart.draw(data, options);
        //}
        const bar = document.getElementById('bar'),
            line = document.getElementById('line')
        doughnut = document.getElementById('doughnut')
        Bubble = document.getElementById('Bubble ');

        new Chart(bar, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Months)),
                datasets: [{
                    label: 'Analysis Data',
                    data: @Html.Raw(Json.Serialize(Model.Counts)),
                    borderColor: '#36A2EB',
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(255, 159, 64)',
                        'rgb(255, 205, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(54, 162, 235)',
                        'rgb(153, 102, 255)',
                        'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


        new Chart(line, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Months)),
                datasets: [{
                    label: 'Analysis Data',
                    data: @Html.Raw(Json.Serialize(Model.Counts)),
                    borderColor: '#36A2EB',
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(255, 159, 64)',
                        'rgb(255, 205, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(54, 162, 235)',
                        'rgb(153, 102, 255)',
                        'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


        new Chart(Bubble, {
            type: 'bubble',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Months)),
                datasets: [{
                    label: 'Analysis Data',
                    data: [{ x:@Html.Raw(Json.Serialize(Model.Counts))}, {y:@Html.Raw(Json.Serialize(Model.Counts))}],
                    borderColor: '#36A2EB',
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(255, 159, 64)',
                        'rgb(255, 205, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(54, 162, 235)',
                        'rgb(153, 102, 255)',
                        'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        new Chart(doughnut, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Months)),
                datasets: [{
                    label: 'Analysis Data',
                    data: [{ x:@Html.Raw(Json.Serialize(Model.Counts))}, {y:@Html.Raw(Json.Serialize(Model.Counts))}],
                    borderColor: '#36A2EB',
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(255, 159, 64)',
                        'rgb(255, 205, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(54, 162, 235)',
                        'rgb(153, 102, 255)',
                        'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

    </script>
}